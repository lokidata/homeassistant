schedy_heating: 
  module: hass_apps_loader
  class: SchedyApp

  actor_type: thermostat


  schedule_prepend:
    - x: "OFF if is_on('switch.delesteur') else Next()"
    - x: "OFF if is_off('input_boolean.chauffage_on_off') else Next()"
    - x: "Mark(OFF, Mark.OVERLAY) if not is_empty(filter_entities('binary_sensor', state='on', window_room=room_name)) else Next()"

  schedule_append:
  - v: "OFF"

  schedule_snippets:

  watched_entities:
  - input_boolean.chauffage_on_off
  - switch.delesteur
  - input_boolean.absence_long_duree
  - input_number.eco_temperature
  - input_number.away_temperature


  rooms:

    salledebain:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_sdb_2:
      watched_entities:
        - binary_sensor.snzb04_sdb_porte_contact
        - input_number.sdb_confort_temperature
        - input_boolean.heating_sdb_enabled_1
        - input_boolean.heating_sdb_enabled_1_t
        - input_boolean.heating_sdb_enabled_1_w
        - binary_sensor.heating_sdb_1
        - binary_sensor.heating_sdb_1_t
        - binary_sensor.heating_sdb_1_w
        - input_boolean.power_rad_sdb_ok
      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_sdb_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()"
        #semaine:
        - x: >
            state('input_number.sdb_confort_temperature')
            if (is_on('input_boolean.heating_sdb_enabled_1') and (is_on('binary_sensor.heating_sdb_1')))
            else Next()  
        #teletravail:
        - x: >
            state('input_number.sdb_confort_temperature')
            if (is_on('input_boolean.heating_sdb_enabled_1_t') and (is_on('binary_sensor.heating_sdb_1_t')))
            else Next()
        #weekend
        - x: >
            state('input_number.sdb_confort_temperature')
            if (is_on('input_boolean.heating_sdb_enabled_1_w') and (is_on('binary_sensor.heating_sdb_1_w')))
            else Next()


    bureau:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_bureau_2:
      watched_entities:
        - input_number.bureau_confort_temperature
        - input_boolean.heating_bureau_enabled_1_t
        - input_boolean.heating_bureau_enabled_1_w
        - binary_sensor.heating_bureau_1_t
        - binary_sensor.heating_bureau_1_w
        - input_boolean.power_rad_bureau_ok
      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_bureau_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()"
        #teletravail:
        - x: >
            state('input_number.bureau_confort_temperature')
            if (is_on('input_boolean.heating_bureau_enabled_1_t') and (is_on('binary_sensor.heating_bureau_1_t')))
            else Next()
        #weekend
        - x: >
            state('input_number.bureau_confort_temperature')
            if (is_on('input_boolean.heating_bureau_enabled_1_w') and (is_on('binary_sensor.heating_bureau_1_w')))
            else Next()
        #eco
        - x: state('input_number.eco_temperature')

    chambre:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_chambre_2:
      watched_entities:
        - input_number.chambre_confort_temperature
        - input_boolean.heating_chambre_enabled_1
        - input_boolean.heating_chambre_enabled_1_t
        - input_boolean.heating_chambre_enabled_1_w
        - binary_sensor.heating_chambre_1
        - binary_sensor.heating_chambre_1_t
        - binary_sensor.heating_chambre_1_w
        - input_boolean.power_rad_chambre_ok

      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_chambre_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()"
        #semaine:
        - x: >
            state('input_number.chambre_confort_temperature')
            if (is_on('input_boolean.heating_chambre_enabled_1') and (is_on('binary_sensor.heating_chambre_1')))
            else Next()
        - x: >
            state('input_number.chambre_confort_temperature')
            if (is_on('input_boolean.heating_chambre_enabled_1_t') and (is_on('binary_sensor.heating_chambre_1_t')))
            else Next()
        #weekend
        - x: >
            state('input_number.chambre_confort_temperature')
            if (is_on('input_boolean.heating_chambre_enabled_1_w') and (is_on('binary_sensor.heating_chambre_1_w')))
            else Next()
        #ECO
        - x: state('input_number.eco_temperature')
    petitechambre:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_petite_chambre_2:
      watched_entities:
        - input_number.petitechambre_confort_temperature
        - input_boolean.heating_petitechambre_enabled_1
        - input_boolean.heating_petitechambre_enabled_1_w
        - binary_sensor.heating_petitechambre_1
        - binary_sensor.heating_petitechambre_1_w
        - input_boolean.power_rad_petitechambre_ok
      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_petitechambre_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()" 
        #semaine:
        - x: >
            state('input_number.petitechambre_confort_temperature')
            if (is_on('input_boolean.heating_petitechambre_enabled_1') and (is_on('binary_sensor.heating_petitechambre_1')))
            else Next()
        #weekend
        - x: >
            state('input_number.petitechambre_confort_temperature')
            if (is_on('input_boolean.heating_petitechambre_enabled_1_w') and (is_on('binary_sensor.heating_petitechambre_1_w')))
            else Next()
        #Eco
        - x: state('input_number.eco_temperature')

    salon:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_salon_2:
      watched_entities:
        - input_number.salon_confort_temperature
        - input_boolean.heating_salon_enabled_1
        - input_boolean.heating_salon_enabled_2
        - input_boolean.heating_salon_enabled_1_t
        - input_boolean.heating_salon_enabled_2_t
        - input_boolean.heating_salon_enabled_3_t
        - input_boolean.heating_salon_enabled_1_w
        - binary_sensor.heating_salon_1
        - binary_sensor.heating_salon_2
        - binary_sensor.heating_salon_1_t
        - binary_sensor.heating_salon_2_t
        - binary_sensor.heating_salon_3_t
        - binary_sensor.heating_salon_1_w
        - input_boolean.power_rad_salon_ok        
      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_salon_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()"
        #teletravail
        - x: >
            state('input_number.salon_confort_temperature')
            if (is_on('input_boolean.heating_salon_enabled_1_t') and (is_on('binary_sensor.heating_salon_1_t')))
            else Next()
        - x: >
            state('input_number.salon_confort_temperature')
            if (is_on('input_boolean.heating_salon_enabled_2_t') and (is_on('binary_sensor.heating_salon_2_t')))
            else Next()
        - x: >
            state('input_number.salon_confort_temperature')
            if (is_on('input_boolean.heating_salon_enabled_3_t') and (is_on('binary_sensor.heating_salon_3_t')))
            else Next()
        #semaine:
        - x: >
            state('input_number.salon_confort_temperature')
            if (is_on('input_boolean.heating_salon_enabled_1') and (is_on('binary_sensor.heating_salon_1')))
            else Next()
        - x: >
            state('input_number.salon_confort_temperature')
            if (is_on('input_boolean.heating_salon_enabled_2') and (is_on('binary_sensor.heating_salon_2')))
            else Next()
        #weekend
        - x: >
            state('input_number.salon_confort_temperature')
            if (is_on('input_boolean.heating_salon_enabled_1_w') and (is_on('binary_sensor.heating_salon_1_w')))
            else Next()
        #eco
        - x: state('input_number.eco_temperature')
    cuisine_salleamanger:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_cuisine_salle_a_manger_2:
      watched_entities:
        - input_number.cuisine_salleamanger_confort_temperature
        - input_boolean.heating_cuisine_salleamanger_enabled_1
        - input_boolean.heating_cuisine_salleamanger_enabled_2
        - input_boolean.heating_cuisine_salleamanger_enabled_1_t
        - input_boolean.heating_cuisine_salleamanger_enabled_2_t
        - input_boolean.heating_cuisine_salleamanger_enabled_3_t
        - input_boolean.heating_cuisine_salleamanger_enabled_1_w
        - binary_sensor.heating_cuisine_salleamanger_1
        - binary_sensor.heating_cuisine_salleamanger_2
        - binary_sensor.heating_cuisine_salleamanger_1_t
        - binary_sensor.heating_cuisine_salleamanger_2_t
        - binary_sensor.heating_cuisine_salleamanger_3_t
        - binary_sensor.heating_cuisine_salleamanger_1_w
        - binary_sensor.power_rad_cuisine_salleamanger_dispo
        - input_boolean.power_rad_cuisine_salleamanger_ok        
      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_cuisine_salleamanger_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()"
        #t√©l√©travail:
        - x: >
            state('input_number.cuisine_salleamanger_confort_temperature')
            if (is_on('input_boolean.heating_cuisine_salleamanger_enabled_1_t') and (is_on('binary_sensor.heating_cuisine_salleamanger_1_t')))
            else Next()
        - x: >
            state('input_number.cuisine_salleamanger_confort_temperature')
            if (is_on('input_boolean.heating_cuisine_salleamanger_enabled_2_t') and (is_on('binary_sensor.heating_cuisine_salleamanger_2_t')))
            else Next()
        - x: >
            state('input_number.cuisine_salleamanger_confort_temperature')
            if (is_on('input_boolean.heating_cuisine_salleamanger_enabled_3_t') and (is_on('binary_sensor.heating_cuisine_salleamanger_3_t')))
            else Next()
        #semaine:
        - x: >
            state('input_number.cuisine_salleamanger_confort_temperature')
            if (is_on('input_boolean.heating_cuisine_salleamanger_enabled_1') and (is_on('binary_sensor.heating_cuisine_salleamanger_1')))
            else Next()
        - x: >
            state('input_number.cuisine_salleamanger_confort_temperature')
            if (is_on('input_boolean.heating_cuisine_salleamanger_enabled_2') and (is_on('binary_sensor.heating_cuisine_salleamanger_2')))
            else Next()
        #weekend
        - x: >
            state('input_number.cuisine_salleamanger_confort_temperature')
            if (is_on('input_boolean.heating_cuisine_salleamanger_enabled_1_w') and (is_on('binary_sensor.heating_cuisine_salleamanger_1_w')))
            else Next()
        #eco    
        - x: state('input_number.eco_temperature')

    entree:
      allow_manual_changes: true
      rescheduling_delay: 1 # overwrite conf manuelle au bout de 2h.
      actors:
        climate.thermostat_entree_2:
      watched_entities:
        - input_number.entree_confort_temperature
        - input_boolean.heating_entree_enabled_1
        - input_boolean.heating_entree_enabled_2
        - input_boolean.heating_entree_enabled_1_w
        - binary_sensor.heating_entree_1
        - binary_sensor.heating_entree_2
        - binary_sensor.heating_entree_1_w
        - binary_sensor.power_rad_entree_dispo
        - input_boolean.power_rad_entree_ok        
      schedule:
      - rules:
        - x: "OFF if is_off('input_boolean.power_rad_entree_ok') else Next()"
        - x: "state('input_number.away_temperature') if is_on('input_boolean.absence_long_duree') else Next()"
        #semaine:
        - x: >
            state('input_number.entree_confort_temperature')
            if (is_on('input_boolean.heating_entree_enabled_1') and (is_on('binary_sensor.heating_entree_1')))
            else Next()
        - x: >
            state('input_number.entree_confort_temperature')
            if (is_on('input_boolean.heating_entree_enabled_2') and (is_on('binary_sensor.heating_entree_2')))
            else Next()
        #weekend
        - x: >
            state('input_number.entree_confort_temperature')
            if (is_on('input_boolean.heating_entree_enabled_1_w') and (is_on('binary_sensor.heating_entree_1_w')))
            else Next()
        #eco
        - x: state('input_number.eco_temperature')

